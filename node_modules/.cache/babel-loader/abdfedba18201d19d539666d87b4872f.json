{"remainingRequest":"/Users/digamber/Desktop/vue-image-preview/node_modules/babel-loader/lib/index.js!/Users/digamber/Desktop/vue-image-preview/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/digamber/Desktop/vue-image-preview/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/digamber/Desktop/vue-image-preview/src/components/filePreview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/digamber/Desktop/vue-image-preview/src/components/filePreview.vue","mtime":1587499255947},{"path":"/Users/digamber/Desktop/vue-image-preview/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/digamber/Desktop/vue-image-preview/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/digamber/Desktop/vue-image-preview/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/digamber/Desktop/vue-image-preview/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwcmV2aWV3SW1hZ2U6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWxlY3RJbWFnZTogZnVuY3Rpb24gc2VsZWN0SW1hZ2UoKSB7CiAgICAgIHRoaXMuJHJlZnMuZmlsZUlucHV0LmNsaWNrKCk7CiAgICB9LAogICAgcGlja0ZpbGU6IGZ1bmN0aW9uIHBpY2tGaWxlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGlucHV0ID0gdGhpcy4kcmVmcy5maWxlSW5wdXQ7CiAgICAgIHZhciBmaWxlID0gaW5wdXQuZmlsZXM7CgogICAgICBpZiAoZmlsZSAmJiBmaWxlWzBdKSB7CiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CgogICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgX3RoaXMucHJldmlld0ltYWdlID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgIH07CgogICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGVbMF0pOwogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgZmlsZVswXSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["filePreview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,SAAA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,KAAA;;AACA,UAAA,IAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,YAAA,GAAA,CAAA,CAAA,MAAA,CAAA,MAAA;AACA,SAFA;;AAGA,QAAA,MAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AACA;AACA;AAfA;AANA,CAAA","sourcesContent":["<template>\n  <div>\n    <div\n      class=\"imagePreviewWrapper\"\n      :style=\"{ 'background-image': `url(${previewImage})` }\"\n      @click=\"selectImage\">\n    </div>\n\n    <input\n      ref=\"fileInput\"\n      type=\"file\"\n      @input=\"pickFile\">\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n      return {\n        previewImage: null\n      };\n    },\n  methods: {\n      selectImage () {\n          this.$refs.fileInput.click()\n      },\n      pickFile () {\n        let input = this.$refs.fileInput\n        let file = input.files\n        if (file && file[0]) {\n          let reader = new FileReader\n          reader.onload = e => {\n            this.previewImage = e.target.result\n          }\n          reader.readAsDataURL(file[0])\n          this.$emit('input', file[0])\n        }\n      }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.imagePreviewWrapper {\n    width: 250px;\n    height: 250px;\n    display: block;\n    cursor: pointer;\n    margin: 0 auto 30px;\n    background-size: cover;\n    background-position: center center;\n}\n</style>\n"],"sourceRoot":"src/components"}]}